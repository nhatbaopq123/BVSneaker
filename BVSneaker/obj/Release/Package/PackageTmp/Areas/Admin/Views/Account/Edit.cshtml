@model BVSneaker.Models.EditAccountViewModel
@{
    ViewBag.Title = "Edit Account";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<style>
    .hideShow {
        position: absolute;
        top: 0px;
        right: 100px;
        transition: right 0.2s;
    }
</style>
<!-- Content Header (Page header) -->
@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/Admin/Home" class="nav-link">Home</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/Admin/Menu" class="nav-link">Menu</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/Admin/Advertisement" class="nav-link">Advertisement</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/Admin/Brand" class="nav-link">Brand</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/Admin/Category" class="nav-link">Category</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/Admin/Topic" class="nav-link">Topic</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/Admin/Product" class="nav-link">Product</a>
        </li>
    </ul>
}

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Add Account</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { }))
            {
                @Html.ValidationSummary(true)
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.UserId)
                <div class="form-group">
                    <label>Full Name</label>
                    @Html.TextBoxFor(x => x.FullName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.FullName, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Email Name</label>
                    @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Email, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Mobile Number</label>
                    @Html.TextBoxFor(x => x.Phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Phone, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Role</label>
                    @Html.DropDownListFor(x => x.Role, ViewBag.Role as SelectList, "-Choose Role-", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Role, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <a href="/Admin/Account" class="btn btn-danger">Back</a>
                    <button type="submit" class="btn btn-success">Update</button>
                </div>
            }
        </div>
    </div>
    <!-- /.card-body -->
    <div class="card-footer">

    </div>
    <!-- /.card-footer -->
    <!-- /.card -->

</section>

@section scripts{
    <script>$(".toggle-password").click(function () {

            $(this).toggleClass("fa-eye fa-eye-slash");
            var input = $($(this).attr("toggle"));
            if (input.attr("type") == "password") {
                input.attr("type", "text");
            } else {
                input.attr("type", "password");
            }
        });</script>
}
